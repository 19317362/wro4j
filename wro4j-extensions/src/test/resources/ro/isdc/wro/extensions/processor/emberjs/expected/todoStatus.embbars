(function() {Ember.TEMPLATES['todoStatus'] = Ember.Handlebars.template(
function anonymous(Handlebars, depth0, helpers, partials, data) {
    this.compilerInfo = [3, ">= 1.0.0-rc.4"];
    helpers = helpers || Ember.Handlebars.helpers;
    data = data || {};
    var buffer = "", stack1, hashTypes, hashContexts, escapeExpression = this.escapeExpression, self = this;
    function program1(depth0, data) {
        data.buffer.push("s");
    }
    data.buffer.push("<div class=\"row-fluid span5\">\n  <strong>");
    hashTypes = {};
    hashContexts = {};
    data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, "remaining", {hash: {}, contexts: [depth0], types: ["ID"], hashContexts: hashContexts, hashTypes: hashTypes, data: data})));
    data.buffer.push("</strong> items left.\n  <button id=\"remove-finished\" class=\"btn btn-inverse\">\n    <i class=\"icon-ban-circle icon-white\"></i> Clear <strong>");
    hashTypes = {};
    hashContexts = {};
    data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, "finished", {hash: {}, contexts: [depth0], types: ["ID"], hashContexts: hashContexts, hashTypes: hashTypes, data: data})));
    data.buffer.push("</strong> completed item");
    hashTypes = {};
    hashContexts = {};
    stack1 = helpers.unless.call(depth0, "oneFinished", {hash: {}, inverse: self.noop, fn: self.program(1, program1, data), contexts: [depth0], types: ["ID"], hashContexts: hashContexts, hashTypes: hashTypes, data: data});
    if (stack1 || stack1 === 0) {
        data.buffer.push(stack1);
    }
    data.buffer.push("\n  </button>\n</div>");
    return buffer;
}
)})();